import os
import numpy as np
import numpy.random as random
import scipy as sp
import pandas as pd
from pandas import Series, DataFrame
from sklearn.model_selection import train_test_split

os.chdir('D:/kenkyu/Padeldata54010/last/')
os.getcwd()
df = pd.read_excel('PC.xlsx')

df.drop(['T3','T2','BV'], axis=1,inplace=True)
df.isnull().sum()
df.dropna(inplace = True)
df.isnull().sum()

X = df.drop('T1', axis=1)
Y = df['T1']
X=X.astype('str')
Y=Y.astype('str')
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state=0)

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import cross_val_score
from bayes_opt import BayesianOptimization

def LogisticRegression_cv(C, random_state):
    val = cross_val_score(
        LogisticRegression(
            C=int(C),
            random_state=int(random_state),
        ),
        X_train, y_train,
        scoring = 'accuracy',
        cv = 3, # 3-fold
        n_jobs = -1 
    ).mean()
    return val

LogisticRegression_cv_bo = BayesianOptimization(
    LogisticRegression_cv,
   {'C': (1, 6),
    'random_state': (1, 100)}
)


gp_params = {"alpha": 1e-5}
LogisticRegression_cv_bo.maximize(n_iter=50, **gp_params)

c=LogisticRegression_cv_bo.res
rev = c
import csv
with open('data.csv', 'w') as csvfile:
 fields = ['target', 'random_state', 'C']
 writer = csv.DictWriter(csvfile, fieldnames=fields, lineterminator='\n')
 writer.writeheader()
 for row in rev:
  writer.writerow({fields[0]: row[fields[0]], **row['params']})
