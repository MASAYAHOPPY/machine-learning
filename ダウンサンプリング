from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import SelectFromModel
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from imblearn.pipeline import Pipeline 
from imblearn.under_sampling import RandomUnderSampler

select = SelectFromModel(RandomForestClassifier(max_depth=30, n_estimators=30, random_state=42))
scaler = StandardScaler()
clf = LogisticRegression()
rus = RandomUnderSampler(random_state=0, sampling_strategy = strategy)

estimator = [
    ('rus', rus),
    ('select', select),
    ('scaler', scaler),
    ('clf', clf)
]
pipe_smote = Pipeline(estimator)
pipe_smote.fit(X_train, y_train)
#pipeによるモデルの作製
#rus=アンダーサンプリング



positive_count_train = y_train.value_counts()[0]
strategy = {0:positive_count_train, 1:positive_count_train*2, 2:positive_count_train*5}

X_resampled, y_resampled = rus.fit_resample(X_train, y_train)
y_resampled.value_counts()

y_pred = piperus.predict(X_test)
from sklearn.metrics import classification_report
print(classification_report(y_test, y_pred)


