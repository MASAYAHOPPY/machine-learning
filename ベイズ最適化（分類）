import os
import numpy as np
import numpy.random as random
import scipy as sp
import pandas as pd
from pandas import Series, DataFrame
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.ensemble import RandomForestClassifier
from bayes_opt import BayesianOptimization
os.chdir('D:/kenkyu/Padeldata54010/last/')
os.getcwd()
df = pd.read_excel('FP.xlsx')
df.drop(['T3','T2','T1'], axis=1,inplace=True)
df.isnull().sum()
df.dropna(inplace = True)
df.isnull().sum()
X = df.drop('BV', axis=1)
Y = df['BV']
X=X.astype('str')
Y=Y.astype('str')
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state=0)

#def()の()の中身が調整したいハイパーパラメータである。
#最初に交差検証しているので注意
#次に、データの種類、ハイパーパラメータ、交差検証数、を定義する。
#最初にモデルをdef形式で作成し、保存する。次に保存したモデルにベイズ最適化という流れ

def randomforest_cv(n_estimators, min_samples_split, max_features):
    val = cross_val_score(
        RandomForestClassifier(
            n_estimators=int(n_estimators),
            min_samples_split=int(min_samples_split),
            max_features=max_features,
            random_state=0
        ),
        X_train, y_train,
        scoring = 'accuracy',
        cv = 3, # 3-fold
        n_jobs = -1 
    ).mean()
    return val
    
#ここで、…が現れないようにスペース2回程度押して>>>となればOK
#ここで、ベイズ最適化、探したい範囲を決める

randomforest_cv_bo = BayesianOptimization(
    randomforest_cv,
    {'n_estimators': (10, 250),
    'min_samples_split': (2, 25),
    'max_features': (0.1, 0.999)}
)

gp_params = {"alpha": 1e-5}
randomforest_cv_bo.maximize(n_iter=50, **gp_params)

c=randomforest_cv_bo.res
rev = c
import csv
with open('data.csv', 'w') as csvfile:
 fields = ['target', 'max_features', 'min_samples_split', 'n_estimators']
 writer = csv.DictWriter(csvfile, fieldnames=fields, lineterminator='\n')
 writer.writeheader()
 for row in rev:
  writer.writerow({fields[0]: row[fields[0]], **row['params']})

#　c=rev ,ベイズ最適化の結果をdata.csvに出力
