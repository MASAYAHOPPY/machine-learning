from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import SelectFromModel
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from imblearn.pipeline import Pipeline 
from imblearn.over_sampling import RandomOverSampler

＃[]に引数を指定して、一つ一つの答えの文字列の数を数えたのちに、starategyに代入
positive_count_train = y_train.value_counts()["1"]
print(positive_count_train)
strategy = {"1":59748, "2":10000, "3":578, "4":805, "6":169, "a":20, "b":3686, "c":1088, "d":240, "e":6, "m":141, "n":1637}

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
＃少数サンプル数のX倍をモデルに渡す方法（↑のサブの方法（）
positive_count_train = y_train.value_counts()[1]
strategy = {"1":positive_count_train, "2":positive_count_train*10, "3":positive_count_train*10, "4":positive_count_train*10, "6":positive_count_train*10, "a":positive_count_train*10, "b":positive_count_train*10, "c":positive_count_train*10, "d":positive_count_train*10, "e":positive_count_train*10, "m":positive_count_train*10, "n":positive_count_train*10}
#["1"]の該当するデータの行数
#["1"]の何倍の数をデータとしてモデルに渡すか？
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
#estimatorの定義 → pipelineへの譲渡
select = SelectFromModel(RandomForestClassifier(max_depth=30, n_estimators=30, random_state=42))
clf = RandomForestClassifier(max_depth=30, n_estimators=30, random_state=42)
rus = RandomOverSampler(random_state=0, sampling_strategy = strategy)

estimator = [
    ('rus', rus),
    ('select', select),
    ('clf', clf)
]
pipe_rus = Pipeline(estimator)
pipe_rus.fit(X_train, y_train)

#pipeによるモデルの作製
#rus=アンダーサンプリング

X_resampled, y_resampled = rus.fit_resample(X_train, y_train)
y_resampled.value_counts()


#モデルトレーニング

y_pred = pipe_rus.predict(X_test)
from sklearn.metrics import classification_report
print(classification_report(y_test, y_pred))

#混同行列
